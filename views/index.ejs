<!doctype html>
<html lang="en">
  <%- include('head') %>
  <body>
    <div id="container">
      <div id="manage-btn">
        <button id="share-url"
                type="button"
                class="btn btn-sm btn-purple"
                data-bs-toggle="modal"
                data-bs-target="#share-modal"
                title="Get a URL to share these streams.">
          <i class="fas fa-share"></i>
        </button>
        <button id="manage-btn-actual"
                type="button"
                class="btn btn-sm btn-purple"
                data-bs-toggle="modal"
                data-bs-target="#streams-modal"
                title="Manage the streams you are currently watching.">
          <i class="fas fa-tv"></i>
        </button>
      </div>

      <%- include('defaultContent') %>
      <div id="streams-container">
        &nbsp;
      </div>
    </div>

    <div id="stream-manager">
      <%- include('streamManagerModal') %>
    </div>    

    <%- include('newStreamTemplate') %>
    <%- include('changelogModal') %>
    <%- include('privacyModal') %>
    <%- include('psodModal') %>
    <%- include('shareModal') %>
  
    <script src="/js/pwa.js"></script>

    <script type="text/javascript">
      const streamsModal = document.getElementById('streams-modal');
      const manageBtnActual = document.getElementById('manage-btn-actual');
      const saveBtn = document.getElementById('save-btn');
      const newStreamField = document.getElementById('new_stream');
      const addStreamBtn = document.getElementById('add-stream-btn');

      window.addEventListener('DOMContentLoaded', (event) => {
        ManyTwitch.streams.setStreams('<%= streamsFromParms %>'); // init session storage item.
        ManyTwitch.streams.update();
      });

      streamsModal.addEventListener('shown.bs.modal', (event) => {

        Array.from(document.getElementsByClassName('streams-modal-table-tr')).forEach(element => {
          element.remove();
        });

        Array.from(ManyTwitch.streams.getStreams()).forEach(element => {
          ManyTwitch.manager.addToTable(element);
        });

        newStreamField.focus();

        if (ManyTwitch.util.streamCount() < 1) {
          addStreamBtn.setAttribute('disabled', 'disabled');
          saveBtn.setAttribute('disabled', 'disabled');
        } else {
          saveBtn.removeAttribute('disabled');
        }

      });

      streamsModal.addEventListener('hidden.bs.modal', (event) => {
        newStreamField.value = '';
        addStreamBtn.setAttribute('disabled', 'disabled');
      });

      saveBtn.addEventListener('click', (event) => {

        let streamsList = document.getElementsByClassName('streams-modal-table-tr');
        let streams = ManyTwitch.streams.getStreams();
        let newStreams = [];

        Array.from(streamsList).forEach(element => {
          let streamName = element.dataset.streamName;
          let streamCheckbox = document.getElementById(`streams_${streamName}`);
          if (streamCheckbox.checked) {
            newStreams.push(streamName);
          } else {
            element.remove();
          }
        });

        ManyTwitch.streams.setStreams(newStreams.join(','));
        ManyTwitch.streams.update();
      });

      newStreamField.addEventListener('paste', (event) => {
        if ($(this).length < 1) {
          addStreamBtn.setAttribute('disabled', 'disabled');
        } else {
          addStreamBtn.removeAttribute('disabled');
        }
      });
    </script>

    <%- include('analytics') %>
    <script defer src="/js/all.min.js"></script>
  </body>
</html>