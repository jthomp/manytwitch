<!doctype html>
<html lang="en">
  <%- include('head') %>
  <body>
    <div id="container">
      <%- include('actionBar') %>
      <%- include('defaultContent') %>
      <div id="streams-container">
        &nbsp;
      </div>
    </div>

    <div id="stream-manager">
      <%- include('streamManagerModal') %>
    </div>    

    <%- include('newStreamTemplate') %>
    <%- include('psodModal') %>
  
    <script src="/js/pwa.js"></script>

    <script type="text/javascript">
      const streamsModal = document.getElementById('streams-modal');
      const manageBtnActual = document.getElementById('manage-btn-actual');
      const saveBtn = document.getElementById('save-btn');
      const newStreamField = document.getElementById('new_stream');
      const addStreamBtn = document.getElementById('add-stream-btn');
      const clearBtn = document.getElementById('clear-btn');

      window.addEventListener('DOMContentLoaded', (event) => {
        ManyTwitch.streams.setStreams('<%= streamsFromParms %>'); // init session storage item.
        ManyTwitch.streams.update();
      });

      streamsModal.addEventListener('shown.bs.modal', (event) => {

        Array.from(document.getElementsByClassName('streams-modal-table-tr')).forEach(element => {
          element.remove();
        });

        Array.from(ManyTwitch.streams.getStreams()).forEach(element => {
          ManyTwitch.manager.addToTable(element);
        });

        newStreamField.focus();

        if (ManyTwitch.util.streamCount() < 1) {
          addStreamBtn.setAttribute('disabled', 'disabled');
          saveBtn.setAttribute('disabled', 'disabled');
        } else {
          saveBtn.removeAttribute('disabled');
        }

      });

      streamsModal.addEventListener('hidden.bs.modal', (event) => {
        newStreamField.value = '';
        addStreamBtn.setAttribute('disabled', 'disabled');
      });

      saveBtn.addEventListener('click', (event) => {

        let streamsList = document.getElementsByClassName('streams-modal-table-tr');
        let streams = ManyTwitch.streams.getStreams();
        let newStreams = [];

        Array.from(streamsList).forEach(element => {
          let streamName = element.dataset.streamName;
          let streamCheckbox = document.getElementById(`streams_${streamName}`);
          if (streamCheckbox.checked) {
            newStreams.push(streamName);
          } else {
            element.remove();
          }
        });

        ManyTwitch.streams.setStreams(newStreams.join(','));
        ManyTwitch.streams.update();
      });

      newStreamField.addEventListener('paste', (event) => {
        if ($(this).length < 1) {
          addStreamBtn.setAttribute('disabled', 'disabled');
        } else {
          addStreamBtn.removeAttribute('disabled');
        }
      });

      clearBtn.addEventListener('click', (event) => {
        if (confirm('This will clear all your current streams. This change applies immediately.\r\n\r\nAre you sure?')) {
          let streamsList = document.getElementsByClassName('streams-modal-table-tr');
          let streams = ManyTwitch.streams.getStreams();
          let newStreams = [];

          Array.from(streamsList).forEach(element => {
            element.remove();
          });

          ManyTwitch.streams.setStreams(newStreams.join(','));
          ManyTwitch.streams.update();
        }
      });
    </script>

    <script defer src="/js/all.min.js"></script>

    <%- include('analytics') %>
  </body>
</html>